[
  {
    "objectID": "posts/low-resource-langs-india/2020-07-30-endangered-languages-of-india.html",
    "href": "posts/low-resource-langs-india/2020-07-30-endangered-languages-of-india.html",
    "title": "Understanding the spread of Extinct and Endangered languages across India",
    "section": "",
    "text": "Visualizing the spread of low resource languages across India."
  },
  {
    "objectID": "posts/low-resource-langs-india/2020-07-30-endangered-languages-of-india.html#data-description",
    "href": "posts/low-resource-langs-india/2020-07-30-endangered-languages-of-india.html#data-description",
    "title": "Understanding the spread of Extinct and Endangered languages across India",
    "section": "Data Description",
    "text": "Data Description\nThe dataset of extinct and endangered languages around the world is created by The Guardian and is available here.\nVariables: The name of language, longitude, latitude, degree of endangerment and the number of speakers.\n\nData Visualisation\nLanguages by latitude/longitude and Population are plotted.\nThe interactive visualisation of Languages by Latitude/longitude inform us, where all the extinct and endangered languages are located across India.\nSimilarly, Languages by number of speakers is plotted.\n\n\nCode\n#collapse-hide\nimport numpy as np\nimport pandas as pd\npd.options.mode.chained_assignment = None\n\nfrom IPython.display import HTML\nfrom chart_studio import plotly\nimport plotly.graph_objs as go\nfrom plotly import tools\nfrom plotly.offline import iplot, init_notebook_mode\ninit_notebook_mode()\n\nlanguage_data = pd.read_csv('data.csv', usecols=[0, 1, 5, 7, 10, 12, 13])\nlanguage_data = language_data.rename(\n    columns={'Name in English':'language', 'Country codes alpha 3':'locations',\n             'Degree of endangerment':'risk', 'Number of speakers':'population'})\nlanguage_data.columns = language_data.columns.str.lower()\nlanguage_data['risk'] = language_data['risk'].str.title()\nlanguage_data['population'] = language_data['population'].fillna(-1)\n\n# endangered or extinct languages in India\nlanguage_ind = language_data[language_data['locations'].str.contains('IND') == True]\n\nlanguage_ind['risk'] = language_ind['risk'].replace(\n    ['Vulnerable', 'Definitely Endangered', 'Severely Endangered',\n     'Critically Endangered', 'Extinct'], [1, 2, 3, 4, 5])\n\nlanguage_ind = language_ind[['language', 'risk', 'population', 'latitude', 'longitude']]\n\n\n\n\nLanguages by Latitude/Longitude\n\n\nCode\n#collapse-hide\nlabels = ['Isolated', 'Threatened', 'Endangered', 'Abandoned', 'Extinct']\ncolors = ['rgb(0, 157, 220)', 'rgb(128, 206, 237)', 'rgb(255, 182, 128)',\n          'rgb(255, 115, 13)', 'rgb(242, 23, 13)']\n\ntraces = []\nfor i in range(1, 6):\n    traces.append(dict(\n        type = 'scattergeo',\n        lon = language_ind[language_ind.risk == i]['longitude'],\n        lat = language_ind[language_ind.risk == i]['latitude'],\n        text = language_ind[language_ind.risk == i]['language'],\n        mode = 'markers',\n        name = labels[i-1],\n        marker = dict( \n            size = 12,\n            opacity = 0.85,\n            color = colors[i-1],\n            line = dict(color = 'rgb(255, 255, 255)', width = 1)\n        )\n    ))\n# print(traces)\nlayout = dict(\n         title = 'Languages by Latitude/Longitude in India (2016)&lt;br&gt;'\n                 '&lt;sub&gt;Click Legend to Display or Hide Categories&lt;/sub&gt;',\n         showlegend = True,\n         legend = dict(\n             x = 0.85, y = 0.4\n         ),\n        geo = dict(\n                 scope = 'asia',\n                 showland = True,\n                 landcolor = 'rgb(250, 250, 250)',\n                 subunitwidth = 1,\n                 subunitcolor = 'rgb(217, 217, 217)',\n                 countrywidth = 1,\n                 countrycolor = 'rgb(217, 217, 217)',\n                 showlakes = True,\n                 lakecolor = 'rgb(255, 255, 255)')\n        )\n\n\nfigure = dict(data = traces, layout = layout)\n\n\n\n\nCode\n#collapse-hide\nimport plotly.io as pio\n\npio.show(figure)\n\n\n                                                \n\n\n\n\nLanguages by Population\n\n\nCode\n#collapse-hide\nlanguage_ind = language_ind.sort_values('population', ascending = False)\nlanguage_ind['text'] = language_ind['language'] + '&lt;br&gt;' + 'Population ' + language_ind[\n                                                                 'population'].astype(str)\n\nnew_traces = []\nfor i in range(1, 6):\n    new_traces.append(dict(\n        type = 'scattergeo',\n        lon = language_ind[language_ind.risk == i]['longitude'],\n        lat = language_ind[language_ind.risk == i]['latitude'],\n        text = language_ind[language_ind.risk == i]['text'],\n        mode = 'markers',\n        name = labels[i-1],\n        hoverinfo = 'text+name',\n        marker = dict( \n            size = (language_ind[language_ind.risk == i]['population'] + 1) ** 0.18 * 6,\n            opacity = 0.85,\n            color = colors[i-1],\n            line = dict(color = 'rgb(255, 255, 255)', width = 1)\n        )\n    ))\n\nnew_layout = dict(\n         title = 'Languages by Population in India (2016)&lt;br&gt;'\n                 '&lt;sub&gt;Click Legend to Display or Hide Categories&lt;/sub&gt;',\n         showlegend = True,\n         legend = dict(\n             x = 0.85, y = 0.4\n         ),\n         geo = dict(\n             scope = 'asia',\n             showland = True,\n             landcolor = 'rgb(250, 250, 250)',\n             subunitwidth = 1,\n             subunitcolor = 'rgb(217, 217, 217)',\n             countrywidth = 1,\n             countrycolor = 'rgb(217, 217, 217)',\n             showlakes = True,\n             lakecolor = 'rgb(255, 255, 255)')\n        )\n\nnew_figure = dict(data = new_traces, layout = new_layout)\n\n\n\n\nCode\n#collapse-hide\nimport plotly.io as pio\n\npio.show(new_figure)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Akhilesh",
    "section": "",
    "text": "Understanding the spread of Extinct and Endangered languages across India\n\n\n\n\n\n\nnlp\n\n\n\n\n\n\n\n\n\nJul 30, 2020\n\n\nAkhilesh\n\n\n\n\n\n\n\n\n\n\n\n\nSoftwares I use\n\n\n\n\n\n\npersonal-config\n\n\n\n\n\n\n\n\n\nMay 21, 2020\n\n\nAkhilesh\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Hello! I am Akhilesh Kakolu Ramarao. I am a Natural Language Processing Researcher, currently working as a Wissenschaftlicher Mitarbeiter at the Department of English Language and Linguistics, Heinrich Heine University, Germany.\nI currently work on Computational Morphology – supervised by Prof. Dr. Kevin Tang and Dr. Dinah Baer-Henney.\nI am actively engaged in language revitalization efforts for indigenous communities in Arunachal Pradesh, India, with a focus on Idu Mishmi and K’man Mishmi languages.\nIn my previous life, I have worked on building multilingual chatbots and voice assistants at Skit.ai, as an NLP Researcher at CivicDataLab and as a Software Engineer at Ramco Systems.\nTo know more about my work, you can check my resume here."
  },
  {
    "objectID": "posts/softwares/2020-05-21-softwares-i-use.html",
    "href": "posts/softwares/2020-05-21-softwares-i-use.html",
    "title": "Softwares I use",
    "section": "",
    "text": "Here are the list of softwares I use for almost everything.\n\n\nArch Linux with all free software.\n\n\n\nLibreWolf with vim key bindings.\n\n\n\nst\n\n\n\nNeovim and Doom Emacs\n\n\n\nNeomutt & Doom Emacs\n\n\n\nmpv\n\n\n\nZathura\n\n\n\ndwm\n\n\n\nlf\n\n\n\nGIMP\n\n\n\nTransmission\n\n\n\nLibreOffice\n\n\n\nlf\n\n\n\nzsh and fish"
  },
  {
    "objectID": "posts/softwares/2020-05-21-softwares-i-use.html#softwares-i-use",
    "href": "posts/softwares/2020-05-21-softwares-i-use.html#softwares-i-use",
    "title": "Softwares I use",
    "section": "",
    "text": "Here are the list of softwares I use for almost everything.\n\n\nArch Linux with all free software.\n\n\n\nLibreWolf with vim key bindings.\n\n\n\nst\n\n\n\nNeovim and Doom Emacs\n\n\n\nNeomutt & Doom Emacs\n\n\n\nmpv\n\n\n\nZathura\n\n\n\ndwm\n\n\n\nlf\n\n\n\nGIMP\n\n\n\nTransmission\n\n\n\nLibreOffice\n\n\n\nlf\n\n\n\nzsh and fish"
  }
]